// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;
using VisitsApp.Models;

namespace VisitsApp.Models
{
    public partial class Visit
    {
        private string _comments;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Comments
        {
            get { return this._comments; }
            set { this._comments = value; }
        }
        
        private DateTimeOffset? _date;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? Date
        {
            get { return this._date; }
            set { this._date = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private ServiceUser _serviceUser;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public ServiceUser ServiceUser
        {
            get { return this._serviceUser; }
            set { this._serviceUser = value; }
        }
        
        private Visitor _visitor;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Visitor Visitor
        {
            get { return this._visitor; }
            set { this._visitor = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Visit class.
        /// </summary>
        public Visit()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken commentsValue = inputObject["Comments"];
                if (commentsValue != null && commentsValue.Type != JTokenType.Null)
                {
                    this.Comments = ((string)commentsValue);
                }
                JToken dateValue = inputObject["Date"];
                if (dateValue != null && dateValue.Type != JTokenType.Null)
                {
                    this.Date = ((DateTimeOffset)dateValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken serviceUserValue = inputObject["ServiceUser"];
                if (serviceUserValue != null && serviceUserValue.Type != JTokenType.Null)
                {
                    ServiceUser serviceUser = new ServiceUser();
                    serviceUser.DeserializeJson(serviceUserValue);
                    this.ServiceUser = serviceUser;
                }
                JToken visitorValue = inputObject["Visitor"];
                if (visitorValue != null && visitorValue.Type != JTokenType.Null)
                {
                    Visitor visitor = new Visitor();
                    visitor.DeserializeJson(visitorValue);
                    this.Visitor = visitor;
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Visit
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Comments != null)
            {
                outputObject["Comments"] = this.Comments;
            }
            if (this.Date != null)
            {
                outputObject["Date"] = this.Date.Value;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.ServiceUser != null)
            {
                outputObject["ServiceUser"] = this.ServiceUser.SerializeJson(null);
            }
            if (this.Visitor != null)
            {
                outputObject["Visitor"] = this.Visitor.SerializeJson(null);
            }
            return outputObject;
        }
    }
}
