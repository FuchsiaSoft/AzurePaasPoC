// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using VisitsApp.Models;

namespace VisitsApp.Models
{
    public partial class ServiceUser
    {
        private string _addressFour;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AddressFour
        {
            get { return this._addressFour; }
            set { this._addressFour = value; }
        }
        
        private string _addressOne;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AddressOne
        {
            get { return this._addressOne; }
            set { this._addressOne = value; }
        }
        
        private string _addressThree;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AddressThree
        {
            get { return this._addressThree; }
            set { this._addressThree = value; }
        }
        
        private string _addressTwo;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AddressTwo
        {
            get { return this._addressTwo; }
            set { this._addressTwo = value; }
        }
        
        private string _firstname;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Firstname
        {
            get { return this._firstname; }
            set { this._firstname = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _postCode;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PostCode
        {
            get { return this._postCode; }
            set { this._postCode = value; }
        }
        
        private ServiceUserType _serviceUserType;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public ServiceUserType ServiceUserType
        {
            get { return this._serviceUserType; }
            set { this._serviceUserType = value; }
        }
        
        private string _surname;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Surname
        {
            get { return this._surname; }
            set { this._surname = value; }
        }
        
        private Visitor _visitor;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public Visitor Visitor
        {
            get { return this._visitor; }
            set { this._visitor = value; }
        }
        
        private IList<Visit> _visits;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Visit> Visits
        {
            get { return this._visits; }
            set { this._visits = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ServiceUser class.
        /// </summary>
        public ServiceUser()
        {
            this.Visits = new LazyList<Visit>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken addressFourValue = inputObject["AddressFour"];
                if (addressFourValue != null && addressFourValue.Type != JTokenType.Null)
                {
                    this.AddressFour = ((string)addressFourValue);
                }
                JToken addressOneValue = inputObject["AddressOne"];
                if (addressOneValue != null && addressOneValue.Type != JTokenType.Null)
                {
                    this.AddressOne = ((string)addressOneValue);
                }
                JToken addressThreeValue = inputObject["AddressThree"];
                if (addressThreeValue != null && addressThreeValue.Type != JTokenType.Null)
                {
                    this.AddressThree = ((string)addressThreeValue);
                }
                JToken addressTwoValue = inputObject["AddressTwo"];
                if (addressTwoValue != null && addressTwoValue.Type != JTokenType.Null)
                {
                    this.AddressTwo = ((string)addressTwoValue);
                }
                JToken firstnameValue = inputObject["Firstname"];
                if (firstnameValue != null && firstnameValue.Type != JTokenType.Null)
                {
                    this.Firstname = ((string)firstnameValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken postCodeValue = inputObject["PostCode"];
                if (postCodeValue != null && postCodeValue.Type != JTokenType.Null)
                {
                    this.PostCode = ((string)postCodeValue);
                }
                JToken serviceUserTypeValue = inputObject["ServiceUserType"];
                if (serviceUserTypeValue != null && serviceUserTypeValue.Type != JTokenType.Null)
                {
                    ServiceUserType serviceUserType = new ServiceUserType();
                    serviceUserType.DeserializeJson(serviceUserTypeValue);
                    this.ServiceUserType = serviceUserType;
                }
                JToken surnameValue = inputObject["Surname"];
                if (surnameValue != null && surnameValue.Type != JTokenType.Null)
                {
                    this.Surname = ((string)surnameValue);
                }
                JToken visitorValue = inputObject["Visitor"];
                if (visitorValue != null && visitorValue.Type != JTokenType.Null)
                {
                    Visitor visitor = new Visitor();
                    visitor.DeserializeJson(visitorValue);
                    this.Visitor = visitor;
                }
                JToken visitsSequence = ((JToken)inputObject["Visits"]);
                if (visitsSequence != null && visitsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken visitsValue in ((JArray)visitsSequence))
                    {
                        Visit visit = new Visit();
                        visit.DeserializeJson(visitsValue);
                        this.Visits.Add(visit);
                    }
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type ServiceUser
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.AddressFour != null)
            {
                outputObject["AddressFour"] = this.AddressFour;
            }
            if (this.AddressOne != null)
            {
                outputObject["AddressOne"] = this.AddressOne;
            }
            if (this.AddressThree != null)
            {
                outputObject["AddressThree"] = this.AddressThree;
            }
            if (this.AddressTwo != null)
            {
                outputObject["AddressTwo"] = this.AddressTwo;
            }
            if (this.Firstname != null)
            {
                outputObject["Firstname"] = this.Firstname;
            }
            if (this.Id != null)
            {
                outputObject["Id"] = this.Id.Value;
            }
            if (this.PostCode != null)
            {
                outputObject["PostCode"] = this.PostCode;
            }
            if (this.ServiceUserType != null)
            {
                outputObject["ServiceUserType"] = this.ServiceUserType.SerializeJson(null);
            }
            if (this.Surname != null)
            {
                outputObject["Surname"] = this.Surname;
            }
            if (this.Visitor != null)
            {
                outputObject["Visitor"] = this.Visitor.SerializeJson(null);
            }
            JArray visitsSequence = null;
            if (this.Visits != null)
            {
                if (this.Visits is ILazyCollection<Visit> == false || ((ILazyCollection<Visit>)this.Visits).IsInitialized)
                {
                    visitsSequence = new JArray();
                    outputObject["Visits"] = visitsSequence;
                    foreach (Visit visitsItem in this.Visits)
                    {
                        if (visitsItem != null)
                        {
                            visitsSequence.Add(visitsItem.SerializeJson(null));
                        }
                    }
                }
            }
            return outputObject;
        }
    }
}
